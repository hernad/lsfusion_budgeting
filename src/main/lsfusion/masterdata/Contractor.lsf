MODULE Contractor;

REQUIRE MasterData, Currency, CostItem;

CLASS Contractor 'Contractor';
TABLE contractor(Contractor);

name 'Name' = DATA ISTRING[50](Contractor) IN id CHARWIDTH 30 NONULL;
regID 'Registration ID' = DATA BPSTRING (Contractor) IN id CHARWIDTH 12;
taxID 'Tax ID' = DATA BPSTRING (Contractor) IN id CHARWIDTH 12;

CONSTRAINT regID(Contractor c) AND NOT onlyDigits(regID(c)) CHECKED BY regID[Contractor] MESSAGE 'Registration ID must contain only digits';
CONSTRAINT taxID(Contractor c) AND NOT onlyDigits(taxID(c)) CHECKED BY taxID[Contractor] MESSAGE 'Tax ID must contain only digits';
// @ToDo TaxID viewer depending on its format 
contractorReg 'Contractor' = GROUP AGGR Contractor c BY regID(c);
contractorTax 'Contractor' = GROUP AGGR Contractor c BY taxID(c);

// Type
CLASS Type {
    individual 'Individual',
    individualCompany 'Individual working for the company',
    company 'Company-contractor'
}
name 'Name' (Type t) = staticCaption(t) IF t IS Type CHARWIDTH 20;

FORM types 'Contractor types'
    OBJECTS t = Type
    PROPERTIES(t) READONLY name
    
    LIST Type OBJECT t
;
type 'Type' = DATA Type(Contractor) NONULL;
nameType 'Type' (Contractor c) = name(type(c));

costItem 'Cost type' = DATA CostItem (Contractor) NONULL;
nameCostItem 'Cost type' (Contractor c) = canonicalName(costItem(c));

contractor 'For other contractors' = DATA BOOLEAN (CostItem);
EXTEND FORM costItem
    PROPERTIES(c) contractor
;

CONSTRAINT costItem(Contractor c) AND NOT contractor(costItem(c)) CHECKED BY costItem[Contractor] MESSAGE 'Cost type for the contractor is not valid';

changeCostItem (Contractor o)  { 
    DIALOG plainCostItems OBJECTS c = costItem(o) CHANGE;
}

currency 'Currency' = DATA Currency (Contractor);
nameCurrency 'Currency' (Contractor c) = name(currency(c));

rate 'Rate, per hour' = DATA NUMERIC[10,2] (Contractor);  
// Формы

FORM contractor 'Contractor'
    OBJECTS c = Contractor PANEL
    PROPERTIES(c) name, regID, taxID, nameType, nameCostItem ON CHANGE changeCostItem(c), nameCurrency, rate

    EDIT Contractor OBJECT c
;

DESIGN contractor {
    size = (800, 480);
    OBJECTS {
        type = CONTAINERV;
        alignment = STRETCH;
        fill = 1;
        MOVE PROPERTY (name(c)) { notNull = TRUE; }
        NEW id {
            type = CONTAINERH;
            alignment = STRETCH;
            MOVE PROPERTY (regID(c));
            MOVE PROPERTY (taxID(c));
        }
        MOVE PROPERTY (nameType(c)) { notNull = TRUE; }
        MOVE PROPERTY (nameCostItem(c));
        NEW rate {
            type = CONTAINERH;
            alignment = STRETCH;
            MOVE PROPERTY (nameCurrency(c));
            MOVE PROPERTY (rate(c));
        }
    }
}

FORM contractors 'Contractors'
    OBJECTS c = Contractor
    PROPERTIES(c) READONLY name, regID, taxID, nameType, nameCostItem, nameCurrency, rate

    PROPERTIES(c) NEWSESSION NEW, EDIT, DELETE 
;

filterContractor 'Search' = DATA LOCAL NESTED ISTRING ();

FORM dialogContractor 'Select contractor'
    PROPERTIES () filterContractor 
    
    OBJECTS c = Contractor
    PROPERTIES(c) READONLY name, nameType, taxID
    FILTERS isSubstring(lower(name(c)), lower(filterContractor())) OR isSubstring(taxID(c), filterContractor()) OR isSubstring(regID(c), filterContractor()) OR NOT filterContractor()
    
    LIST Contractor OBJECT c
;

DESIGN dialogContractor { OBJECTS { alignment = STRETCH; PROPERTY(filterContractor()) { alignment = STRETCH; } }}

addContractor 'New' () {
    NEW c = Contractor {
        SHOW contractor OBJECTS c = c FLOAT;
        SEEK dialogContractor.c = c;
    }
} TOOLBAR;

editContractor 'Edit' (Contractor c) {
    SHOW contractor OBJECTS c = c FLOAT;
} TOOLBAR;

EXTEND FORM dialogContractor PROPERTIES addContractor() DRAW c,editContractor(c);

NAVIGATOR {
    NEW contractors; 
}
